# -*- coding: utf-8 -*-
"""
Created on Sat Jan 23 20:35:23 2018

@author: wang

@function: basic JPEG encoder. DCT + QT +Zigzag + VLC
"""

import img_op

DCTBLOCKSIZE = 64
DCTSIZE = 8

'''
Based on itu-t81 AnnexK.1
'''
STD_Y_QT = [16, 11, 10, 16, 24, 40, 51, 61,\
            12, 12, 14, 19, 26, 58, 60, 55,\
            14, 13, 16, 24, 40, 57, 69, 56,\
            14, 17, 22, 29, 51, 87, 80, 62,\
            18, 22, 37, 56, 68, 109, 103, 77,\
            24, 35, 55, 64, 81, 104, 113, 92,\
            49, 64, 78, 87, 103, 121, 120, 101,
            72, 92, 95, 98, 112, 100, 103, 99]

STD_UV_QT = [17,18,24,47,99,99,99,99,\
             18,21,26,66,99,99,99,99,\
             24,26,56,99,99,99,99,99,\
             47,66,99,99,99,99,99,99,\
             99,99,99,99,99,99,99,99,
             99,99,99,99,99,99,99,99,
             99,99,99,99,99,99,99,99,
             99,99,99,99,99,99,99,99]

STD_ZIGZAGT = [0,1,5,6,14,15,27,28,\
               2,4,7,13,16,26,29,42,\
               3,8,12,17,25,30,41,43,\
               9,11,18,24,31,40,44,53,\
               10,19,23,32,39,45,52,54,\
               20,22,33,38,46,51,55,60,\
               21,34,37,47,50,56,59,61,\
               35,36,48,49,57,58,62,63]

STD_Y_DC_HUFSIZE = [0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0]
STD_Y_DC_HUFVALU = [0,1,2,3,4,5,6,7,8,9,10,11]
STD_UV_DC_HUFSIZE = [0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0]
STD_UV_DC_HUFVALU = [0,1,2,3,4,5,6,7,8,9,10,11]
STD_Y_AC_HUFSIZE = [0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d]
STD_Y_AC_HUFVALU = [0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12, 0x12, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,\
                    0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08, 0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,\
                    0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,\
                    0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,\
                    0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,\
                    0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,\
                    0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,\
                    0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,\
                    0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,\
                    0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\
                    0xf9, 0xfa]
STD_UV_AC_HUFSIZE = [0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77]
STD_UV_AC_HUFVALU = [0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,\
                     0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,\
                     0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34, 0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,\
                     0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,\
                     0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,\
                     0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\
                     0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,\
                     0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,\
                     0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,\
                     0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\
                     0xf9, 0xfa]

'''
方法名称： div_buff
功能描述： 将连续存储图像切割成block方式存储
参数说明：
    inbuff -- 图像buff
    hsize  -- 图像hsize
    vsize  -- 图像vsize
    xlen   -- x方向图像切割长度
    ylen   -- y方向图像切割长度
返回值  ： 切割成block存储的图像buff
'''
def div_buff(inbuff, hsize, vsize, xlen, ylen):
    pass

'''
方法名称： fdct
功能描述： 前向离散余弦变换
参数说明：
    block -- 输入8x8block图像
返回值  ： dct变换结果， 8x8 block
'''
def fdct(block):
    pass

'''
方法名称： qt
功能描述： 量化
参数说明：
    block -- 输入8x8block dct结果
    qt    -- 量化表
返回值  ： 量化结果， 8x8 block
'''
def qt(dctblock, qt):
    pass

'''
方法名称： zigzag
功能描述： zigzag重排
参数说明：
    block -- 输入8x8block 量化结果
    zz    -- zz表
返回值  ： 重排结果，EOB位置
'''
def zigzag(qtblock, qt):
    pass

'''
方法名称： buildbuftab
功能描述： 根据标准hufman BITS and Value 生成bufman 表
参数说明：
    huf_bits  -- 
    huf_value -- 
返回值  ： huftab
'''
def buildhuftab(huf_bits, huf_value):
    pass

'''
方法名称： vlc
功能描述： 变长编码
参数说明：
    zzblock    -- 输入zz重排结果，EOB位置
    dchuftable -- 直流哈夫曼表
    achuftable -- 交流哈夫曼表
返回值  ： 编码结果，编码长度
'''
def vlc(zzblock, dchuftable, achuftable):
    pass

'''
方法名称： jfifo
功能描述： 将变长编码的结果写入文件
参数说明：
    vlc_code -- 变长编码
    vlc_length -- 变长编码长度
    filename -- 写入文件名
返回值  ： 
'''
def jfifo(vlc_code, vlc_length, filename):
    pass

'''
方法名称： jpg_wrsoi
功能描述： 写soi
参数说明：
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wrsoi(filename):
    pass

'''
方法名称： jpg_wrapp0
功能描述： 写app0
参数说明：
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wrapp0(filename):
    pass

'''
方法名称： jpg_wrdqt
功能描述： 写dqt
参数说明：
    y_dqt --
    uv_dqt -- 
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wrdqt(ydqt, cdqt, filename):
    pass

'''
方法名称： jpg_wrsof
功能描述： 写sof
参数说明：
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wrsof(filename):
    pass

'''
方法名称： jpg_wrdht
功能描述： 写dht
参数说明：
    y_dcht
    y_acht
    uv_dcht
    uv_acht
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wrht(y_dcht, y_acht, uv_dcht, uv_acht, filename):
    pass

'''
方法名称： jpg_wrsos
功能描述： 写sos
参数说明：
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wrsos(filename):
    pass

'''
方法名称： jpg_wreoi
功能描述： 写eoi
参数说明：
    filename -- 写入文件名
返回值  ： 
'''
def jpg_wreoi(filename):
    pass



